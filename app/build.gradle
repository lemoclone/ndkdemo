apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.ork.ndkdemo"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        ndk {
            // 声明创建so库的文件名,会自动添加lib前缀, 添加了前缀,不会自动添加
            moduleName "hello-jni"

            //声明启用Android日志, 在c/c++的源文件中使用的#include <android/log.h> 日志将得到输出
            ldLibs "log"
            // 声明创建指定cpu架构的so库, 不声明的话, 默认(gradle 1.5.0)会生成4中架构 多一种mips架构
            // 具体cpu架构的区别请参考:
            // for detailed abiFilter descriptions, refer to "Supported ABIs" @
            // https://developer.android.com/ndk/guides/abis.html#sa
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task uninstall(type: Exec) {
    commandLine 'adb', 'uninstall', 'com.ork.ndkdemo'
    commandLine 'sh', './path.sh'
}

task install(type: Exec, dependsOn: 'assembleDebug') {
    dependsOn 'uninstall'

    commandLine 'adb', 'install', '/Users/dafei/git/ndkdemo/app/build/outputs/apk/app-debug.apk'
}

task start(type: Exec){
    dependsOn 'install'
    commandLine 'adb', 'shell', 'am', 'start', '-n','com.ork.ndkdemo/com.ork.ndkdemo.MainActivity'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}
